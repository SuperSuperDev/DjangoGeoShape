# Generated by Django 3.2.7 on 2021-10-07 02:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import real_estate.models
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('thailand', '0001_initial'),
        ('globe', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('building_number', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Street Address 1')),
                ('address2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Street Address 2')),
                ('locale', models.CharField(blank=True, max_length=100, null=True)),
                ('postal', models.CharField(blank=True, max_length=50, null=True, verbose_name='Postal Code')),
                ('country', models.ForeignKey(default='TH', on_delete=django.db.models.deletion.CASCADE, related_name='addreses', to='globe.country', verbose_name='Country')),
                ('district', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='province', chained_model_field='adm1_pcode', on_delete=django.db.models.deletion.CASCADE, show_all=True, to='globe.district')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thailand.thailandplaces')),
                ('poi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pois', to='globe.poi')),
                ('province', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='country', chained_model_field='adm0_pcode', on_delete=django.db.models.deletion.CASCADE, show_all=True, to='globe.province')),
                ('subdistrict', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='district', chained_model_field='adm2_pcode', on_delete=django.db.models.deletion.CASCADE, to='globe.subdistrict')),
            ],
        ),
        migrations.CreateModel(
            name='Property_Listing',
            fields=[
                ('title', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Visible', [('new', 'new'), ('archived', 'archived'), ('active', 'active')]), ('Invisible', [('draft', 'draft'), ('deleted', 'deleted')])], default='draft', max_length=30)),
                ('listing_status', models.CharField(choices=[('for_sale', 'For Sale'), ('for_rent', 'For Rent'), ('for_sale_rent', 'For Sale and Rent'), ('rental_under_offer', 'Rental - Under Offer'), ('sale_under_offer', 'Sale - Under Offer'), ('sold', 'Sold'), ('rented', 'Rented')], default='for_sale', max_length=30)),
                ('listing_type', models.CharField(choices=[('commercial', 'Commercial'), ('residential', 'Residential'), ('business', 'Business')], default='residential', max_length=20)),
                ('property_type', models.CharField(choices=[('house', 'House'), ('flat', 'Flat'), ('office', 'Office'), ('business', 'Business'), ('industrial', 'Industrial'), ('retail', 'Retail'), ('hospitality', 'Hospitality')], default='house', max_length=20)),
                ('bed_num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('bath_num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('floors_num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('floor_location', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('sq_meters', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('year_built', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(0), real_estate.models.max_value_current_year], verbose_name='year')),
                ('land_size', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('furnishings', models.CharField(choices=[('fully_furnished', 'Fully Furnished'), ('partly_furnished', 'Partly Furnished'), ('unfurnished', 'Unfurnished'), ('not_applicable', 'N/A')], default='unfurnished', max_length=50)),
                ('parking_spaces', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('reference', models.CharField(max_length=20, null=True)),
                ('short_description', models.CharField(max_length=500)),
                ('full_description', models.TextField(max_length=50000)),
                ('sale_price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sale Price')),
                ('rental_price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rental Price (monthly)')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_listings', to='real_estate.address')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_url', models.URLField(verbose_name='Property Image URL')),
                ('property_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='real_estate.property_listing')),
            ],
        ),
    ]
